---
title: "Proyecto final"
author: "Eddie Aguilar"
format:
  html:
    self-contained: true
editor: source
---

```{r}
#| message: false
#| warning: false
library("easypackages")
packages("tidyverse","fpp3", "tsibble", "feasts","fable", "patchwork")
library(plotly)
```
# 1. Introducción

El objetivo de este proyecto es hacer un pronóstico del Producto Interno de Bruto de México.

#2. Datos

Como datos históricos se tienen los siguientes valores de 1993 hasta la mitad de 2021, dividido en trimestres:

- gdp. Producto Interno Bruto Real de México.
- consumption. Consumo Real del sector privado en México. 
- gov_exp. Gasto de consumo final del gobierno general de México.
- imports. Importaciones de Bienes y servicios de México.
- exports. Exportaciones de Bienes y servicios de México. 
- unemployment. Tasa de desempleo para gente de 15 años o mayor en México.
- usd. Tipo de cambio de moneda nacional a dólares estadounidenses.
- uncertainty. Indice de incertidumbre mundial para México.

Se tiene que predecir el valor de "gdp" para los siguientes 6 trimestres. 

```{r}
(gdp <- read_csv("data_gdp.csv", show_col_types = FALSE) |> 
  mutate(date = yearquarter(date)) |> 
  as_tsibble(index = date))

```

# 3 Objetivos

## 3.1 Investigación

Relación de las variables con el PIB. 

- date. Indica la fecha actual.
- Gdp. Es una medida que representa el valor total de los bienes y servicios producidos en un país. Se utiliza para predecir la salud económica.
- Consumption. Es el gasto total en bienes y servicios realizado por las personas, hogares y gobierno. Muestra cuánto se está consumiendo en la economía. 
- Gov_exp. Es el gasto del gobierno en bienes y servicios de consumo, incluyendo salarios y defensa. Puede influir en la actividad económica general.
- Imports. Son los productos y servicios comprados de otros países. Permiten acceder a productos más baratos o de mejor calidad, y pueden impulsar la productividad.
- Exports. Son los bienes y servicios vendidos a otros países. Generan ingresos y contribuyen al crecimiento económico.
- Unemployment. Representa a las personas sin empleo que buscan trabajo. Su disminución puede indicar un aumento en el crecimiento económico.
- Usd. Es el tipo de cambio del dólar estadounidense. Afecta el costo de las importaciones y exportaciones, y puede influir en la inversión extranjera.
- Uncertainty. La falta de claridad en la economía puede afectar la inversión y el consumo, especialmente en una economía dependiente del comercio internacional y la inversión extranjera como México.

## 3.2 EDA

### Visualización

#### Gráfico de dispersión

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(ggplot(gdp) +
      geom_point(aes(x = date, y = i)) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de dispersión"))
  }
}
```

#### Gráficos de tiempo 

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(ggplot(gdp) +
      geom_line(aes(x = date, y = i)) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de tiempo"))
  }
}
```

#### Gráficos de estacionalidad 

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(gg_season(gdp, i) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de estacionalidad"))
  }
}
```

#### Descomposición

```{r}
dcmp <- gdp %>%
  model(Descomposicion = STL(gdp))
components(dcmp)

autoplot(components(dcmp))
```
### Análisis de correlación/autocorrelación

```{r}
gdp |>
  ACF(gdp) |>
  autoplot() + labs(title="PIB autorrelación")
```

```{r}
#| message: false
gdp %>% 
  as_tibble() %>% 
  select(-date) %>% 
  GGally::ggpairs()
```
### Transformaciones

```{r}
autoplot(gdp, gdp)
autoplot(gdp, log(gdp))
```
Como pudimos ver en la descomposición, el PIB tenía una diferente variación en su estacionalidad a lo largo del tiempo, y junto con las gráficas anteriores, vemos que fue buena idea implementar una transformación logarítmica. En un futuro veremos en que modelos es conveniente el uso de esta transformación. 

### Outliers

Podemos ver un claro outlier en el segundo y trecer trimestre de 2020, esto ocasionado claramente por la pandemia. 

## 3.3 Especificación de modelos


### Entrenamiento

```{r}
(train <- gdp %>% filter_index('2000' ~ .))
```

### Modelos benchmark

```{r}
fit1 <- model(train,
             snaive = SNAIVE(log(gdp)),
             drift = RW(log(gdp) ~ drift())
             )
```

### Modelos ETS

Utilizamos un ETS automático. 
Al tener estacionalidad, usaremos estacionalidad multiplicativa, una con tendencía aditiva (Holt Winters) y otra amortiguada (Holt Winters Damped).

```{r}
fit2 <- model(train, 
              hw = ETS(gdp ~ error("M") + trend("A") + season("M")),
              hwa = ETS(gdp ~ error("M") + trend("Ad") + season("M")), 
              auto = ETS(gdp))
```

### Modelos ARIMA

```{r}
features(train, log(gdp), unitroot_kpss)
features(train, log(gdp), unitroot_ndiffs)

atrain <- mutate(train, diff = difference(log(gdp), 1))
features(atrain, diff, unitroot_kpss)
features(atrain, diff, unitroot_ndiffs)

train %>% PACF(log(gdp)) %>% autoplot()
train %>% ACF(log(gdp)) %>% autoplot()


```
Podemos ver que necesita una diferencia para poder ser estacionaria. 
Por lo tanto, haremos un modelo con d = 1.

De igual forma vemos que PACF tiene dos picos iniciales.
Por lo tanto, incluimos p = 2.

Vemos que ACF decae lentamente. 
Por lo tanto, incluimos q = 0.

También haremos un ARIMA automático.

```{r}
fit3 <- model(train, 
              arima = ARIMA(gdp ~ pdq(2,1,0) + PDQ(0,0,0)),
              arima_auto = ARIMA(gdp ~ PDQ(0,0,0)),
              )
```

### Modelo SARIMA

```{r}
train %>% gg_tsdisplay(difference(gdp, 4) , plot_type='partial')
```

- Podemos ver que D = 1, ya que necesitó una diferencia estacional. 
- Si vemos el ACF, nos damos cuenta que tiene dos picos, por lo tanto q = 2.
- Viendo el PACF, proponemos otro modelo con p = 1, ya que tiene solo un pico.
- Posteriormente, juntamos estos dos valores, p = 1, q = 2.
- Posteriormente, juntamos esos valores con una primerea diferencia pdq(1,1,2).
- También incluimos un SARIMA automático.

```{r}
fit4 <- model(train, 
              sarima = ARIMA(gdp ~ pdq(0,0,2) + PDQ(0,1,1)),
              sarima2 = ARIMA(gdp ~ pdq(1,0,0) + PDQ(1,1,0)),
              sarima3 = ARIMA(gdp ~ pdq(1,0,2) + PDQ(1,1,1)),
              sarima4 = ARIMA(gdp ~ pdq(1,1,2) + PDQ(1,1,1)),
              sarima_auto = ARIMA(gdp)
              )
report(fit4)
```

### Modelos de regresión lienal

Como vimos en DEA, la mayoría de variables tienen gran correlación con el PIB. 
Para confirmar esto haremos un FOrwards Stepwise regression:

```{r}
model(train, 
      i = TSLM(gdp ~ consumption),
      ii = TSLM(gdp ~ exports),
      iii = TSLM(gdp ~ gov_exp),
      iv = TSLM(gdp ~ imports),
      v = TSLM(gdp ~ uncertainty),
      vi = TSLM(gdp ~ unemployment),
      vii = TSLM(gdp ~ usd)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports),
      i = TSLM(gdp ~ imports + consumption),
      ii = TSLM(gdp ~ imports + exports),
      iii = TSLM(gdp ~ imports + gov_exp),
      iv = TSLM(gdp ~ imports + uncertainty),
      v = TSLM(gdp ~ imports + unemployment),
      vi = TSLM(gdp ~ imports + usd)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp),
      i = TSLM(gdp ~ imports + gov_exp + consumption),
      ii = TSLM(gdp ~ imports + gov_exp + exports),
      iii = TSLM(gdp ~ imports + gov_exp + uncertainty),
      iv = TSLM(gdp ~ imports + gov_exp + unemployment),
      v = TSLM(gdp ~ imports + gov_exp + usd)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption),
      i = TSLM(gdp ~ imports + gov_exp + consumption + exports),
      ii = TSLM(gdp ~ imports + gov_exp + consumption + uncertainty),
      iii = TSLM(gdp ~ imports + gov_exp + consumption + unemployment),
      iv = TSLM(gdp ~ imports + gov_exp + consumption + usd)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption + usd),
      i = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports),
      ii = TSLM(gdp ~ imports + gov_exp + consumption + usd + uncertainty),
      iii = TSLM(gdp ~ imports + gov_exp + consumption + usd + unemployment)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports),
      i = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + uncertainty),
      ii = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment),
      i = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)

model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment),
      i = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)
```
Como podemos ver, el mejor modelo incluye todas las predictoras. 

```{r}
fit5 <- model(train, 
      regresion = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty))
```

### Modelos de regresión dinamica

Una regresión con valores automáticos y otras dos con valores definidos.

```{r}
fit6 <- model(train, 
              dinamica = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty),
              dinamica2 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + pdq(1,0,2) + PDQ(1,1,1)),
              dinamica3 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + pdq(1,1,2) + PDQ(1,1,1)))
```


### Modelos de regresión lineal más dummies

Incluimos dos dummies para cubrir los dos trimestres de la pandemia. 

```{r}
(train2 <- train %>% mutate(
  q2_20 = if_else(date == yearquarter("2020 Q2"),1,0),
  q3_20 = if_else(date == yearquarter("2020 Q3"),1,0)
))
```

También hacemos un segundo modelo con dummies de estacionalidad y tendencia:

```{r}
fit7 <- model(train2, 
              dummy1= TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + q2_20 + q3_20),
              dummy2= TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + season() + trend() + q2_20 + q3_20))
```

### Modelos de regresión armónica

Modelo con k = 1, con valores ARIMA definidos.

```{r}
fit8 <- train %>%
  model(
    k1 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,0,2) + PDQ(0,0,0))
  )
glance(fit8)

```

### Modelos de regresión armónica con dummies

Un modelo con valores ARIMA automáticos y otro definidos.
k = 1.
```{r}
fit9 <- train2 %>% 
  model(
    k2 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,1,2) + PDQ(0,0,0)  + q2_20 + q3_20),
    k3 = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + q2_20 + q3_20)
  )
glance(fit9)
```


## 3.4 Pronósticos

### Pronóstico de predictoras

Diferentes modelos para cada predictora.  

```{r}
consumo <- train %>% 
  model(
    ETS = ETS(consumption),
    ARIMA = ARIMA(consumption)
  ) %>% 
  forecast(h = 6)
consumo %>% 
  autoplot(train, level = NULL)

gob <- train %>% 
  model(
    snaive = SNAIVE(log(gov_exp)),
    ETS = ETS(gov_exp),
    ARIMA = ARIMA(gov_exp)
  ) %>% 
  forecast(h = 6)
gob %>% 
  autoplot(train, level = NULL)

imp <- train %>% 
  model(
    ETS = ETS(imports),
    ARIMA = ARIMA(imports)
  ) %>% 
  forecast(h = 6)
imp %>% 
  autoplot(train, level = NULL)

exp <- train %>% 
  model(
    SARIMA = ARIMA(exports ~ pdq(0,0,2) + PDQ(0,1,1)),
    ETS = ETS(exports),
    ARIMA = ARIMA(exports)
  ) %>% 
  forecast(h = 6)
exp %>% 
  autoplot(train, level = NULL)

desempleo <- train %>% 
  model(
    ETS = ETS(unemployment),
    ARIMA = ARIMA(unemployment)
  ) %>% 
  forecast(h = 6)
desempleo %>% 
  autoplot(train, level = NULL)

cambio <- train %>% 
  model(
    ETS = ETS(usd),
    ARIMA = ARIMA(usd ~ pdq(2,1,0) + PDQ(0,0,0))
  ) %>% 
  forecast(h = 6)
cambio %>% 
  autoplot(train, level = NULL)

incertidumbre <- train %>% 
  model(
    ETS = ETS(uncertainty),
    ARIMA = ARIMA(uncertainty)
  ) %>% 
  forecast(h = 6)
incertidumbre %>% 
  autoplot(train, level = NULL)


```

Al final se escoge la mejor para los valores futuros.

```{r}
futuro <- new_data(train, 6) %>% 
  mutate(consumption = consumo %>% filter(.model == "ETS") %>% pull(.mean),
         gov_exp = gob %>% filter(.model == "snaive") %>% pull(.mean),
         imports = imp %>% filter(.model == "ARIMA") %>% pull(.mean),
         exports = exp %>% filter(.model == "SARIMA") %>% pull(.mean),
         unemployment = desempleo %>% filter(.model == "ETS") %>% pull(.mean),
         usd = cambio %>% filter(.model == "ARIMA") %>% pull(.mean),
         uncertainty = incertidumbre %>% filter(.model == "ETS") %>% pull(.mean)
         )
```

### Valores futuros con dummies

```{r}
futuro2 <- new_data(train, 6) %>% 
  mutate(consumption = consumo %>% filter(.model == "ETS") %>% pull(.mean),
         gov_exp = gob %>% filter(.model == "snaive") %>% pull(.mean),
         imports = imp %>% filter(.model == "ARIMA") %>% pull(.mean),
         exports = exp %>% filter(.model == "SARIMA") %>% pull(.mean),
         unemployment = desempleo %>% filter(.model == "ETS") %>% pull(.mean),
         usd = cambio %>% filter(.model == "ARIMA") %>% pull(.mean),
         uncertainty = incertidumbre %>% filter(.model == "ETS") %>% pull(.mean),
         q2_20 = c(1, 1, 1, 1, 1, 1),
         q3_20  =c(1, 1, 1, 1, 1, 1)
         )
```


### Pronósticos

```{r}
fc1 <- forecast(fit1, h = 6)
fc2 <- forecast(fit2, h = 6)
fc3 <- forecast(fit3, h = 6)
fc4 <- forecast(fit4, h = 6)
fc5 <- forecast(fit5, futuro)
fc6 <- forecast(fit6, futuro)
fc7 <- forecast(fit7, futuro2)
fc8 <- forecast(fit8, futuro)
fc9 <- forecast(fit9, futuro2)
```

### Gráfico de pronósticos

```{r}
fc1 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc2 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc3 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc4 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc5 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc6 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc7 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc8 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc9 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
```

### Errores de pronósticos

```{r}
accuracy(fit1) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit2) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit3) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit4) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit5) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit6) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit7) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit8) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit9) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
```

### Selección de mejor modelo

Los mejores modelos son: 

- Regresión lineal multiple.
- Regresión dinamica con valores definidos.
- Regresión lineal con dummies, estacionales y de tendencia. 
- Regresión armónica, k = 1, valores ARIMA definidos.
- Regresión armónica, k = 1, valores ARIMA definidos, dummies. 

Sin embargo, viendo los gráficos, vemos que los mejores dos modelos visualmente son:

- Regresión lineal multiple. Error MAPE: 0.64
- Regresión armónica, k = 1, valores ARIMA definidos. Error MAPE: 0.55

Tomando en cuenta el error, el mejor modelo fue:

- Regresión armónica, k = 1, valores ARIMA definidos.


```{r}
(equipo_5 <- model(train, 
      equipo_5 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,0,2) + PDQ(0,0,0))
      ) |> forecast(futuro))
save(equipo_5, file = "equipo_5.RData")
```

### Mejor pronóstico

```{r}
equipo_5 %>% autoplot(filter_index(gdp, "2010"~.))
```

