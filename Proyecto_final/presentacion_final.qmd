---
title: "Proyecto Final"
format: 
  revealjs:
    embed-resources: true
    df-print: paged
    transition: slide
    scrollable: true
    code-overflow: wrap
    code-link: true
    link-external-newwindow: true
    theme: sky
    warning: false
    footer: "Proyecto Final"
editor: visual
---

## **Introducción**

```{r}
#| message: false
#| warning: false
#| echo: false
library("easypackages")
packages("tidyverse","fpp3", "tsibble", "feasts","fable", "patchwork")
library(plotly)
```

El objetivo de este proyecto es hacer un pronóstico del Producto Interno de Bruto de México.

## **Datos**

Datos históricos de 1993 hasta la mitad de 2021, en trimestres

Se tiene que predecir el valor de "gdp" para los siguientes 6 trimestres.

## **Carga de datos**

```{r}
(gdp <- read_csv("data_gdp.csv", show_col_types = FALSE) |> 
  mutate(date = yearquarter(date)) |> 
  as_tsibble(index = date))

```

## **Investigación**

**Relación de las variables con el PIB.**

-   Consumo
-   Gasto de consumo final
-   Importaciones
-   Exportaciones
-   Desempleo
-   Tipo de cambio
-   Incertidumbre

## **Gráfico de dispersión**

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(ggplot(gdp) +
      geom_point(aes(x = date, y = i)) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de dispersión"))
  }
}
```

## **Gráficos de tiempo**

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(ggplot(gdp) +
      geom_line(aes(x = date, y = i)) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de tiempo"))
  }
}
```

## **Gráficos de estacionalidad**

```{r}
i2 <- 1
for (i in select(gdp, gdp:uncertainty)){
  i2 <- i2 + 1
  if (!is.na(names(gdp)[i2])){
    print(gg_season(gdp, i) +
      ylab(names(gdp)[i2]) +
      ggtitle("Gráfico de estacionalidad"))
  }
}
```

## **Descomposición**

```{r}
dcmp <- gdp %>%
  model(Descomposicion = STL(gdp))

autoplot(components(dcmp))
```

## **Análisis de autocorrelación**

```{r}
gdp |>
  ACF(gdp) |>
  autoplot() + labs(title="PIB autorrelación")
```

## **Análisis de correlación**

```{r}
#| message: false
gdp %>% 
  as_tibble() %>% 
  select(-date) %>% 
  GGally::ggpairs()
```

## **Transformaciones**

```{r}
autoplot(gdp, gdp)
autoplot(gdp, log(gdp))
```

## **Outliers**

Podemos ver un claro outlier en el segundo y trecer trimestre de 2020, esto ocasionado claramente por la pandemia.

## **Entrenamiento**

Tomamos los datos a partir de 2000:

```{r}
(train <- gdp %>% filter_index('2000' ~ .))
```

## **Modelos benchmark**

Usamos SNAIVE y drift

```{r}
#| echo: true
fit1 <- model(train,
             snaive = SNAIVE(log(gdp)),
             drift = RW(log(gdp) ~ drift())
             )
```

## **Modelos ETS**

Utilizamos un ETS automático. Usaremos estacionalidad multiplicativa, una con tendencía aditiva (Holt Winters) y otra amortiguada (Holt Winters Damped).

```{r}
#| echo: true
fit2 <- model(train, 
              hw = ETS(gdp ~ error("M") + trend("A") + season("M")),
              hwa = ETS(gdp ~ error("M") + trend("Ad") + season("M")), 
              auto = ETS(gdp))
```

## **Modelos ARIMA**

```{r}
features(train, log(gdp), unitroot_ndiffs)
train %>% PACF(log(gdp)) %>% autoplot()
train %>% ACF(log(gdp)) %>% autoplot()
```

## **Modelos ARIMA**

```{r}
#| echo: true
fit3 <- model(train, 
              arima = ARIMA(gdp ~ pdq(2,1,0) + PDQ(0,0,0)),
              arima_auto = ARIMA(gdp ~ PDQ(0,0,0)),
              )
```

## **Modelos SARIMA**

```{r}
train %>% gg_tsdisplay(difference(gdp, 4) , plot_type='partial')
```

## **Modelos SARIMA**

```{r}
#| echo: true
fit4 <- model(train, 
              sarima = ARIMA(gdp ~ pdq(0,0,2) + PDQ(0,1,1)),
              sarima2 = ARIMA(gdp ~ pdq(1,0,0) + PDQ(1,1,0)),
              sarima3 = ARIMA(gdp ~ pdq(1,0,2) + PDQ(1,1,1)),
              sarima4 = ARIMA(gdp ~ pdq(1,1,2) + PDQ(1,1,1)),
              sarima_auto = ARIMA(gdp)
              )
report(fit4)
```

## **Modelos de regresión lineal**

Haremos un Forwards Stepwise regression:

```{r}
#| echo: true
model(train, 
      o = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment),
      i = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty)
      ) %>% glance() %>% 
  select(.model, AICc, BIC) %>% arrange(AICc)
```

## **Modelos de regresión lineal**

Como podemos ver, el mejor modelo incluye todas las predictoras.

```{r}
#| echo: true
fit5 <- model(train, 
      regresion = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty))
```

## **Modelos de regresión dinamica**

```{r}
#| echo: true
fit6 <- model(train, 
              dinamica = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty),
              dinamica2 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + pdq(1,0,2) + PDQ(1,1,1)),
              dinamica3 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + pdq(1,1,2) + PDQ(1,1,1)))
```

## **Modelos de regresión lineal más dummies**

```{r}

(train2 <- train %>% mutate(
  q2_20 = if_else(date == yearquarter("2020 Q2"),1,0),
  q3_20 = if_else(date == yearquarter("2020 Q3"),1,0)
))
```

```{r}
#| echo: true
fit7 <- model(train2, 
              dummy1= TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + q2_20 + q3_20),
              dummy2= TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty + season() + trend() + q2_20 + q3_20))
```

## **Modelos de regresión armónica**

```{r}
#| echo: true
fit8 <- train %>%
  model(
    k1 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,0,2) + PDQ(0,0,0))
  )

```

## **Modelos de regresión armónica con dummies**

```{r}
#| echo: true
fit9 <- train2 %>% 
  model(
    k2 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,1,2) + PDQ(0,0,0)  + q2_20 + q3_20),
    k3 = TSLM(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + q2_20 + q3_20)
  )
```

```{r}
consumo <- train %>% 
  model(
    ETS = ETS(consumption),
    ARIMA = ARIMA(consumption)
  ) %>% 
  forecast(h = 6)

gob <- train %>% 
  model(
    snaive = SNAIVE(log(gov_exp)),
    ETS = ETS(gov_exp),
    ARIMA = ARIMA(gov_exp)
  ) %>% 
  forecast(h = 6)

imp <- train %>% 
  model(
    ETS = ETS(imports),
    ARIMA = ARIMA(imports)
  ) %>% 
  forecast(h = 6)

exp <- train %>% 
  model(
    SARIMA = ARIMA(exports ~ pdq(0,0,2) + PDQ(0,1,1)),
    ETS = ETS(exports),
    ARIMA = ARIMA(exports)
  ) %>% 
  forecast(h = 6)

desempleo <- train %>% 
  model(
    ETS = ETS(unemployment),
    ARIMA = ARIMA(unemployment)
  ) %>% 
  forecast(h = 6)

cambio <- train %>% 
  model(
    ETS = ETS(usd),
    ARIMA = ARIMA(usd ~ pdq(2,1,0) + PDQ(0,0,0))
  ) %>% 
  forecast(h = 6)

incertidumbre <- train %>% 
  model(
    ETS = ETS(uncertainty),
    ARIMA = ARIMA(uncertainty)
  ) %>% 
  forecast(h = 6)


```

```{r}
futuro <- new_data(train, 6) %>% 
  mutate(consumption = consumo %>% filter(.model == "ETS") %>% pull(.mean),
         gov_exp = gob %>% filter(.model == "snaive") %>% pull(.mean),
         imports = imp %>% filter(.model == "ARIMA") %>% pull(.mean),
         exports = exp %>% filter(.model == "SARIMA") %>% pull(.mean),
         unemployment = desempleo %>% filter(.model == "ETS") %>% pull(.mean),
         usd = cambio %>% filter(.model == "ARIMA") %>% pull(.mean),
         uncertainty = incertidumbre %>% filter(.model == "ETS") %>% pull(.mean)
         )
```

```{r}
futuro2 <- new_data(train, 6) %>% 
  mutate(consumption = consumo %>% filter(.model == "ETS") %>% pull(.mean),
         gov_exp = gob %>% filter(.model == "snaive") %>% pull(.mean),
         imports = imp %>% filter(.model == "ARIMA") %>% pull(.mean),
         exports = exp %>% filter(.model == "SARIMA") %>% pull(.mean),
         unemployment = desempleo %>% filter(.model == "ETS") %>% pull(.mean),
         usd = cambio %>% filter(.model == "ARIMA") %>% pull(.mean),
         uncertainty = incertidumbre %>% filter(.model == "ETS") %>% pull(.mean),
         q2_20 = c(1, 1, 1, 1, 1, 1),
         q3_20  =c(1, 1, 1, 1, 1, 1)
         )
```

```{r}
fc1 <- forecast(fit1, h = 6)
fc2 <- forecast(fit2, h = 6)
fc3 <- forecast(fit3, h = 6)
fc4 <- forecast(fit4, h = 6)
fc5 <- forecast(fit5, futuro)
fc6 <- forecast(fit6, futuro)
fc7 <- forecast(fit7, futuro2)
fc8 <- forecast(fit8, futuro)
fc9 <- forecast(fit9, futuro2)
```

## **Gráfico de pronósticos**

```{r}
fc1 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc2 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc3 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc4 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc5 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc6 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc7 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc8 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
fc9 %>% autoplot(filter_index(gdp, "2010"~.), level = NULL)
```

## **Errores de pronósticos**

```{r}
accuracy(fit1) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit2) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit3) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit4) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit5) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit6) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit7) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit8) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
accuracy(fit9) %>% select(.model, .type, MAPE) %>% arrange(MAPE)
```

## **Selección de mejor modelo**

**Los mejores modelos son:**

-   Regresión lineal multiple.
-   Regresión dinamica con valores definidos.
-   Regresión lineal con dummies, estacionales y de tendencia.
-   Regresión armónica, k = 1, valores ARIMA definidos.
-   Regresión armónica, k = 1, valores ARIMA definidos, dummies.

## **Selección de mejor modelo**

**Sin embargo, viendo los gráficos, vemos que los mejores dos modelos visualmente son:**

-   Regresión lineal multiple. Error MAPE: 0.64
-   Regresión armónica, k = 1, valores ARIMA definidos. Error MAPE: 0.55

## **Selección de mejor modelo**

**Tomando en cuenta el error, el mejor modelo fue:**

-   Regresión armónica, k = 1, valores ARIMA definidos.

```{r}
#| echo: true
(equipo_5 <- model(train, 
      equipo_5 = ARIMA(gdp ~ imports + gov_exp + consumption + usd + exports + unemployment + uncertainty+ fourier(K = 1) + pdq(1,0,2) + PDQ(0,0,0))
      ) |> forecast(futuro))
save(equipo_5, file = "equipo_5.RData")
```

## **Mejor pronóstico**

```{r}
equipo_5 %>% autoplot(filter_index(gdp, "2010"~.))
```
