---
title: "05 Tarea pronósticos"
author: "Eddie Aguilar"
format:
  html:
    self-contained: true
editor: source
---


```{r}
#| message: false
library("easypackages")
packages("tidyverse","fpp3", "tsibble", "feasts","fable", "patchwork")
library("USgas")
```


# Tarea

Series:

## 1. Serie de ventas de ropa en el Estado de Victoria, Australia
```{r}
(clothes_victoria <- filter(aus_retail, State == "Victoria", Industry == "Clothing retailing") |> select(Month, Turnover))


train <- filter_index(clothes_victoria, "2000 Jan" ~ "2015 Dec")
autoplot(clothes_victoria, Turnover)

fit <- model(train, 
             Mean = MEAN(Turnover), 
             Naive = NAIVE(Turnover), 
             Snaive = SNAIVE(Turnover), 
             Drift = RW(Turnover ~ drift()))

fc <- forecast(fit, h = "3 years")

fc |> autoplot(filter_index(clothes_victoria, "2000 Jan" ~ .), level = NULL) +
  ggtitle("Pronóstico de ventas mensuales de ropa en Victoria") +
  xlab("Mes") + ylab("MegaWhats/hora") + 
  guides(color=guide_legend(title="Tipo")) +
  geom_vline(xintercept = as.Date("2016-01-01"), color = "firebrick", linetype = "dashed")
```

```{r}
select(fit, Mean) |> gg_tsresiduals() + ggtitle("Media") 
```
La media no es buena idea, no muestra distribución normal del todo, están autocorrelacionados y la gráfica muestra un patrón.

```{r}
select(fit, Naive) |> gg_tsresiduals() + ggtitle("Naive") 
```
Naive parece ser la mejor opción, tiene distribución normal, su varianza es algo constante y no parece estar muy correlacionado.


```{r}
select(fit, Snaive) |> gg_tsresiduals() + ggtitle("Snaive") 
```
Snaive muestra distribución normal, sin embargo, parece presentar cierta correlación y patrón.
A pesar de esto, Snaive sigue siendo un buen modelo al ver el gráfico.


```{r}
select(fit, Drift) |> gg_tsresiduals() + ggtitle("Drift") 
```

Drift tiene residuales muy similares a Naive, pueden ser buenas bases para aplicar otros modelos, sin embargo, tomando solo en cuenta los benchmark, probablemente Snaive será el que se va a utilizar.

```{r}
fc <- filter(fc, .model == "Snaive")
fc_bs <- forecast(fit, h ="3 years", bootstrap = TRUE)
fc_bs <- filter(fc_bs, .model == "Snaive")

fc |> autoplot(filter_index(clothes_victoria, "2000 Jan" ~ .)) +
  ggtitle("Pronóstico de ventas mensuales de ropa en Victoria") +
  xlab("Mes") + ylab("MegaWhats/hora") + 
  guides(color=guide_legend(title="Tipo")) +
  geom_vline(xintercept = as.Date("2016-01-01"), color = "firebrick", linetype = "dashed")

fc_bs |> autoplot(filter_index(clothes_victoria, "2000 Jan" ~ .)) +
  ggtitle("Pronóstico de ventas mensuales de ropa en Victoria") +
  xlab("Mes") + ylab("MegaWhats/hora") + 
  guides(color=guide_legend(title="Tipo")) +
  geom_vline(xintercept = as.Date("2016-01-01"), color = "firebrick", linetype = "dashed")
```
Al no ser datos muy aleatorios o los datos de una acción, y que los horizontes de pronóstico no son muy diferentes, no es necesario usar Bootstrap.




## 2. Serie de PIB per capita de Australia
```{r}

(aus_gdp <- filter(global_economy, Code == "AUS") %>% 
   mutate(GDP_pc = GDP / Population) |> select(Year, GDP_pc))

train <- filter_index(aus_gdp, "1970" ~ "2010")
autoplot(aus_gdp, GDP_pc)

fit <- model(train, 
             Mean = MEAN(GDP_pc), 
             Naive = NAIVE(GDP_pc), 
             Snaive = SNAIVE(GDP_pc), 
             Drift = RW(GDP_pc ~ drift()))

fc <- forecast(fit, h = "7 years")

fc |> autoplot(filter_index(aus_gdp, "1970" ~ .), level = NULL) +
  ggtitle("Pronóstico de PIB per Capita de Australia") +
  xlab("Año") + ylab("USD") + 
  guides(color=guide_legend(title="Tipo")) +
  geom_vline(xintercept = 2011, color = "firebrick", linetype = "dashed")
```
Como podemos ver, Snaive no funciona al no ser estacional (se usan datos anuales)
```{r}
select(fit, Mean) |> gg_tsresiduals() + ggtitle("Media") 
```
La media no es buena idea, no muestra distribución normal, están autocorrelacionados y la gráfica muestra un patrón muy similar a los datos.

```{r}
select(fit, Naive) |> gg_tsresiduals() + ggtitle("Naive") 
```
Naive parece ser la mejor opción, tiene distribución normal, y a pesar de no tener una varianza muy constante, es la mejor, y no parece estar muy correlacionado.


```{r}
select(fit, Drift) |> gg_tsresiduals() + ggtitle("Drift") 
```

Drift tiene residuales muy similares a Naive, y tomando en cuenta las gráficas, se decide usar Drift para capturar la tendencia alcista que tiene. 


Al no ser datos muy aleatorios o los datos de una acción, y que los horizontes de pronóstico no son muy diferentes, no es necesario usar Bootstrap.


