---
title: "Capítulo 2 FPP3"
author: "Eddie Aguilar"
format:
  html:
    self-contained: true
editor: source
---

```{r}
library(tidyverse)
library(fpp3)
```

# Book

```{r}
# How to make a tsibble: 

(y <- tsibble(
  Year = 2015:2019,
  Observation = c(123, 39, 78, 52, 110),
  index = Year
))

# Out of a tibble:
(y <- tibble(
  Year = 2015:2019,
  Observation = c(123, 39, 78, 52, 110)
) %>% 
  as_tsibble(index = Year))
```


Using ansett tsibble, we graph only the flights from Melbourne to Sydney in economy class, we can see 
several drops on christmas day due to the lack of flights that day of the year, several values of 0 before 1990.

```{r}
ansett

melsyd_economy <- ansett |>
  filter(Airports == "MEL-SYD", Class == "Economy") |>
  mutate(Passengers = Passengers/1000)
autoplot(melsyd_economy, Passengers) +
  labs(title = "Ansett airlines economy class",
       subtitle = "Melbourne-Sydney",
       y = "Passengers ('000)")
```

## Time series patterns

Trend: When there is a long-term increase or decrease in the data. 

Seasonal: A series is influenced by seasonal factors.

Cyclic: Rises and falls in the data that are not of fixed period.

NOTE: Annual data cannot have seasonal pattern.


```{r}
us_employment %>% 
  filter(Title == "Retail Trade", year(Month) >= 1980) %>% 
  autoplot(Employed / 1e3) +
  labs(y = "Milllion people", title = "Retail employment, USA")
```

We can see an overall increasing trend, an obvious seasonal pattern every summer in the US and finally a cycle every several years.



## Seasonal plot

```{r}
# Daily
vic_elec |> gg_season(Demand, period = "day") +
  theme(legend.position = "none") +
  labs(y="MWh", title="Electricity demand: Victoria")

# Weekly
vic_elec |> gg_season(Demand, period = "week") +
  theme(legend.position = "none") +
  labs(y="MWh", title="Electricity demand: Victoria")

# Annual
vic_elec |> gg_season(Demand, period = "year") +
  labs(y="MWh", title="Electricity demand: Victoria")
```


## Seasonal subseries plots

```{r}
holidays <- tourism |>
  filter(Purpose == "Holiday") |>
  group_by(State) |>
  summarise(Trips = sum(Trips))

gg_season(holidays, Trips) +
  labs(y = "Overnight trips ('000)",
       title = "Australian domestic holidays")
```


```{r}
holidays |>
  gg_subseries(Trips) +
  labs(y = "Overnight trips ('000)",
       title = "Australian domestic holidays")
```

## Correlation matrices

```{r}
visitors <- tourism |>
  group_by(State) |>
  summarise(Trips = sum(Trips))
visitors |>
  ggplot(aes(x = Quarter, y = Trips)) +
  geom_line() +
  facet_grid(vars(State), scales = "free_y") +
  labs(title = "Australian domestic tourism",
       y= "Overnight trips ('000)")
```

```{r}
visitors |>
  pivot_wider(values_from=Trips, names_from=State) |>
  GGally::ggpairs(columns = 2:9)
```

## Lag plots

Lag 1 graphs each quarter against the previous quarter.

Lag 2 graphs each quarter against 2 previous quarter.

And so on...

```{r}
recent_production <- aus_production |>
  filter(year(Quarter) >= 2000)
recent_production |>
  gg_lag(Beer, geom = "point") +
  labs(x = "lag(Beer, k)")
```
We can see lag 4 and lag 8 have a strong positive correlation, that is due to the seasonal pattern every year(summer)


## Autocorreltaion functions (ACF)

When having all the lags from the previous topic, we can calculate the autocorreltaion of each lag, 
which is what we graphed in the lag plots, but now with values. 

Once we have those values, we are going to be able to see the same patterns, strong negative correlation in lag 2, 6, 10, ... and strong positive correlation in lag 4, 8, ...
That's due to trend, seasonality and a combination of both. 

Some rules: 

- When data have a trend, the autocorrelations for small lags tend to be large and positive.
- When data are seasonal, the autocorrelations will be larger at the seasonal lags.
- When data have both, you see a combination of these effects.

```{r}
recent_production |> ACF(Beer, lag_max = 9)
```

We plot them:

```{r}
recent_production |>
  ACF(Beer) |>
  autoplot() + labs(title="Australian beer production")
```


## White noise

These occurs when there is no seasonality, trend so the autocorrelations are close to 0 (Everything is all over the place and seems random).

It's uncorrealated, with zero mean and constant variance.

Let's make some random graph:

```{r}
set.seed(30)
y <- tsibble(sample = 1:50, wn = rnorm(50), index = sample)
y |> autoplot(wn) + labs(title = "White noise", y = "")
```

```{r}
y |>
  ACF(wn) |>
  autoplot() + labs(title = "White noise")
```

As we can see, there is really no spikes out of the range.

That´s why the range (blue line) is really important to graph, which is the 95% of critical values.

# Exercises

## 1. 

```{r}
autoplot(aus_production, Bricks)
autoplot(pelt, Lynx)
autoplot(gafa_stock, Close)
autoplot(vic_elec, Demand)
```

## 2.

```{r}
group_by(gafa_stock, Symbol) %>% 
  filter(Close == max(Close)) %>% 
  select(Symbol, Date, Close)
```

## 3. 

a.
```{r}
tute1 <- readr::read_csv("Excels/tute1.csv")
View(tute1)
```
b. 
```{r}
(tute <- tute1 |>
  mutate(Quarter = yearquarter(Quarter)) |>
  as_tsibble(index = Quarter))
```

c.
```{r}
tute |>
  pivot_longer(-Quarter) |>
  ggplot(aes(x = Quarter, y = value, colour = name)) +
  geom_line() +
  facet_grid(name ~ ., scales = "free_y")
```
## 4. 

a. 
```{r}
install.packages("USgas")
library("USgas")
```
b. 
```{r}
(us_total |> 
  as_tsibble(index = year, key = state) -> us_total)
```

c. 
```{r}
filter(us_total, state %in% c("Maine", "Vermont", "New Hampshire", "Massachusetts", "Connecticut", "Rhode Island")) |> 
  ggplot(aes(x = year, y = y)) +
  geom_line(aes(color = state)) + 
  labs(y = "Gas consumption", title = "Annual natural gas consumption")
```
## 5. 

a. 

```{r}
tourism <- readxl::read_excel("Excels/tourism.xlsx")
```

b.
```{r}

(mutate(tourism, Quarter = yearquarter(Quarter)) |> 
  as_tsibble(index = Quarter, key = c(Region, State, Purpose)) -> tourism)

tsibble::tourism 
```

c. 

```{r}

group_by(tourism, Region, Purpose) |> 
  filter(Trips == max(Trips)) |> 
  select(-State) |> 
  arrange(desc(Trips))

# Melbourne, Visiting
```

d. 
```{r}
(state_tourism <- group_by(tourism, State) |> 
   summarise(total_Trips = sum(Trips)))
```

## 6. 

```{r}
aus_arrivals
autoplot(aus_arrivals)
gg_season(aus_arrivals)
gg_subseries(aus_arrivals)
```

