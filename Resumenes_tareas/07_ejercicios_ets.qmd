---
title: "07 Ejercicios ETS"
author: "Eddie Aguilar"
format: 
  html:
    self-contained: true
---

```{r}
library("tidyverse")
library("fpp3") 
library("patchwork")
library("plotly")
```

## Ejercicios de ETS

Usaremos la tasa de interés real y el empleo en Educación Privada y Servicios de Salúd en un intervalo de 10 años

Para esto, primero importaremos los datos de FRED:

```{r}
datos_tbl <- tidyquant::tq_get(
  x    = c("REAINTRATREARAT10Y", "CEU6500000001"), 
  get  = "economic.data",
  from = "1982-01-01",
  to   = "2023-02-01"
)
```

```{r}
datos_tbl
```

Lo convertimos a tsibble:

```{r}
datos_tsbl <- datos_tbl |> 
  mutate(
    date = yearmonth(date),
    symbol = if_else(symbol == "REAINTRATREARAT10Y",
                     "int_rate", "employment")
  ) |> 
  as_tsibble(
    index = date,
    key   = symbol
  )

datos_tsbl
```

Usaremos los ultimos dos años:

```{r}
datos_train <- datos_tsbl |> 
  filter_index(. ~ "2021 feb.")
```

Visualización:

```{r}
datos_train |> 
  autoplot(price) +
  facet_wrap(~ symbol, scales = "free_y", ncol = 1) +
  theme(legend.position = "none")
```

```{r}
datos_train |> 
  gg_season(price)
```

Como podemos ver, la serie de empleo tiene estacionalidad y tendencia alcista, mientras que la serie de tasa de interés tiene solo tendencia a la baja. Por lo tanto, utilizaremos diferentes modelos.

```{r}
datos_wide <- datos_train |> 
  pivot_wider(
    names_from  = symbol,
    values_from = price
  )
datos_wide
```

```{r}
datos_tsbl_wide <- datos_tsbl |> 
  pivot_wider(
    names_from  = symbol,
    values_from = price
  )
```

##Empleo

```{r}
employment_fit <- datos_wide |> 
  model(
    drift    = RW(employment ~ drift()),
    snaive   = SNAIVE(employment),
    ets_aada = ETS(employment ~ error("A") + trend("Ad") + season("A")),
    ets_madm = ETS(employment ~ error("M") + trend("Ad") + season("M"))
  )
employment_fit
```

```{r}
employment_fit |> 
  select(ets_aada) |> 
  gg_tsresiduals() +
  ggtitle("Residual Diagnostics for the ETS(A,Ad,A) model")
```

```{r}
employment_fit |> 
  select(ets_madm) |> 
  gg_tsresiduals() +
  ggtitle("Residual Diagnostics for the ETS(M,Ad,M) model")
```

Ambos modelos de ETS muestran ciertos patrones en sus residuos. Trataremos de mejorar los modelos y nos enfocaremos en el error MAE:

```{r}
accuracy(employment_fit) |> 
  select(.model, .type, MAE, RMSE, MAPE, MASE) |> 
  arrange(MAE)
```

```{r}
lambda <- datos_wide |> 
  features(employment, guerrero) |> 
  pull(lambda_guerrero)

employment_fit2 <- datos_wide |> 
  model(
    ets_bc_aada = ETS(box_cox(employment, lambda) ~ error("A") + trend("Ad") + season("A")),
    ets_bc_madm = ETS(box_cox(employment, lambda) ~ error("M") + trend("Ad") + season("M"))
  )
```

```{r}
employment_fit2 |> 
  select(ets_bc_aada) |> 
  gg_tsresiduals() +
  ggtitle("Residual Diagnostics for the ETS(A,Ad,A) model using a Box-Cox transformation")
```

```{r}
employment_fit2 |> 
  select(ets_bc_madm) |> 
  gg_tsresiduals() +
  ggtitle("Residual Diagnostics for the ETS(M,Ad,M) model using a Box-Cox transformation")
```

Como sigue sin mejorar, usaremos un modelo de descomposición.

```{r}
datos_wide |> 
  model(
    stl = STL(employment, robust = TRUE)
  ) |> 
  components() |> 
  autoplot()
```

```{r}
employment_fit3 <- datos_wide |> 
  model(
    stl_drift_snaive = decomposition_model(
      STL(employment, robust = TRUE),
      SNAIVE(season_year),
      RW(season_adjust ~ drift())
    ),
    stl_ets = decomposition_model(
      STL(employment, robust = TRUE),
      ETS(season_year ~ error("M") + trend("N") + season("M")),
      ETS(season_adjust ~ error("A") + trend("A") + season("N"))
    )
  )

employment_fit3
```

```{r}
accuracy(employment_fit3) |> 
  select(.model, .type, MAE, RMSE, MAPE, MASE) |> 
  arrange(MAE)
```

```{r}
employment_fit_full <- employment_fit |> 
  cross_join(employment_fit2) |> 
  cross_join(employment_fit3)

employment_fc <- employment_fit_full |> 
  forecast(h = "2 years")

employment_fc
```

```{r}
employment_fc |> 
  autoplot(datos_tsbl_wide |> filter_index("2010 jan." ~ .), level = NULL)
```

```{r}
employment_fc |> 
  filter(.model %in% c("drift", "stl_drift_snaive", "stl_ets")) |> 
  autoplot(datos_tsbl_wide |> filter_index("2010 jan." ~ .), level = NULL)
```

```{r}
employment_fc |> 
  accuracy(datos_tsbl_wide) |> 
  select(.model, .type, MAE, RMSE, MAPE, MASE) |> 
  arrange(MAE)
```

```{r}
employment_fit_combination <- employment_fit_full |> 
  mutate(combination = (drift + stl_ets + stl_drift_snaive)/3) |> 
  select(contains("drift"), contains("stl"), combination) 

employment_fc2 <- employment_fit_combination |> forecast(h = "2 years")

employment_fc2 |> 
  autoplot(datos_tsbl_wide |> filter_index("2015 jan." ~ .), level = NULL)
```

```{r}
employment_fc2 |> 
  accuracy(datos_tsbl_wide) |> 
  select(.model, .type, MAE, RMSE, MAPE, MASE) |> 
  arrange(MAE)
```

```{r}
employment_refit <- datos_tsbl_wide |> 
  drop_na() |> 
  model(
    combination = combination_model(
      RW(employment ~ drift()),
      decomposition_model(
      STL(employment, robust = TRUE),
      SNAIVE(season_year),
      RW(season_adjust ~ drift())
    ),
    decomposition_model(
      STL(employment, robust = TRUE),
      ETS(season_year ~ error("M") + trend("N") + season("M")),
      ETS(season_adjust ~ error("A") + trend("A") + season("N"))
    )
    )
  )
employment_refit
```

```{r}
employment_refit |> 
  forecast(h = "2 years") |> 
  autoplot(datos_tsbl_wide |> filter_index("2015 jan." ~ .))
```
