---
title: "09 Ejercicio regresión armónica dinámica"
format:
  html:
    self-contained: true
editor: source
---


Eddie Aguilar
Ernesto Morales

```{r}
library("easypackages")
packages("tidyverse","fpp3", "tsibble", "feasts","fable", "patchwork")
library(plotly)
```

```{r}
vic_elec
```

Usando datos cada hora: 

```{r}
(vic_elec_hour <- index_by(vic_elec, time = ~ floor_date(., unit="hour")) |> 
  summarise(demand = sum(Demand),
         mean_temp = mean(Temperature),
         max_temp = max(Temperature),
         holiday = any(Holiday)) |> 
    mutate(
      day_type = case_when(
        holiday ~ "holiday",
        wday(time) %in% 2:6 ~ "weekday",
        TRUE ~ "weekend"
      )))
```

```{r}
p <- autoplot(vic_elec_hour, demand, color = "blue")

ggplotly(p, dynamicTicks = TRUE) |> rangeslider()
```

```{r}
vic_elec_hour |> 
  ggplot(aes(x = mean_temp, y = demand, 
             color = holiday)) +
  geom_point(alpha = 0.5)
```

```{r}
vic_elec_hour |> 
  ggplot(aes(x = mean_temp, y = demand, 
             color = day_type)) +
  geom_point(alpha = 0.5)
```

```{r}
(train <- filter(vic_elec_hour, year(time) %in% 2012:2015))
```

```{r}
# maximos:
# year = 4380
# week = 84
# day = 12

fit <- train |>  
  model(
    Fourier = TSLM(demand ~ mean_temp + I(mean_temp^2) + day_type + fourier(period = "year", K = 10) + 
                      fourier(period = "week", K = 8) + 
                      fourier(period = "day", K = 6)))
glance(fit)



```


```{r}
aug <- augment(fit)
aug

```


```{r}
ggplot() +
  geom_line(vic_elec_hour, mapping = aes(x = time, y = demand)) + 
  geom_line(aug, mapping = aes(x = time, y = .fitted), color = "blue", alpha = 0.8)
```
